;------------------------------------------------------------------------------
;
; Copyright (c) 2006, Intel Corporation. All rights reserved.<BR>
; SPDX-License-Identifier: BSD-2-Clause-Patent
;
; Module Name:
;
;   Invd.Asm
;
; Abstract:
;
;   AsmInvd function
;
; Notes:
;
;------------------------------------------------------------------------------

    DEFAULT REL
	
	SECTION .data
		global ASM_PFX(_vartest)
		_vartest DQ 0x1234
		
		global ASM_PFX(_vartest2)
		_vartest2 DQ 0x1234
		
		global ASM_PFX(_vartest3)
		_vartest3 DQ 0x1234
		
		global ASM_PFX(_vartest4_timer1)
		_vartest4_timer1 DQ 0x0
	
    SECTION .text

;------------------------------------------------------------------------------
; VOID
; EFIAPI
; AsmInvd (
;   OUT  UINT32  *RegisterOutEax  OPTIONAL
;   );
;------------------------------------------------------------------------------
global ASM_PFX(AsmInvd)
ASM_PFX(AsmInvd):
;    invd
;    ret
	
	;mov rbx, 0 
	;mov rax, 0
	;mov rcx, 0
	;mov rdx, 0
	
	;ret
	
	; demo 1
	mov rax, _vartest
	mov [_vartest2], rbp
	mov [_vartest3], rsp
	;pushfq
	mov rcx, rax
	ret

	; demo 2 
	; jesli zwraca wartość do UINT64 ale sama wartość jest 32 bitowac wtedy zapisze to 0000002000000020
	; a nie tak jak oczekujesz 00000020
	
;	mov rax, _vartest
;	cmp rax, 1 
;	jge demo1
;	;cmp rax, 0
;	;jnz demo
;	;je demo
	
;demo:
;	mov rax, _vartest
;	mov rdx, 0x20
;	mov [_vartest], rdx
;	ret

;demo1:
;	mov rax, _vartest
;	mov rdx, 0xff
;	mov [_vartest], rdx
;	ret
